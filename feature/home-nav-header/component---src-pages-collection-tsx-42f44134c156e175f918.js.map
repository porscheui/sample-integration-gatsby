{"version":3,"sources":["webpack:///./src/components/componentCollection.tsx","webpack:///./src/pages/collection.tsx"],"names":["ComponentCollection","useState","submit","setSubmit","activePage","setActivePage","size","variant","className","type","onClick","e","preventDefault","handleSubmit","handleDismiss","href","name","role","data-testid","totalItemsCount","itemsPerPage","onPageChange","detail","page","CollectionPage"],"mappings":"mJA+GeA,EA/Fa,WAAmB,MACjBC,oBAAS,GAA9BC,EADsC,KAC9BC,EAD8B,OAETF,mBAAS,GAAtCG,EAFsC,KAE1BC,EAF0B,KAkB7C,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAWC,KAAK,MACd,kBAAC,IAAD,CAAWC,QAAQ,cAAnB,YAEF,kBAAC,IAAD,CAAWD,KAAK,MACd,kBAAC,IAAD,CAAUE,UAAU,aAEtB,kBAAC,IAAD,CAAWF,KAAK,MAEbJ,EAAS,kBAAC,IAAD,CAAWK,QAAQ,cAAnB,SAAoD,GAC9D,kBAAC,IAAD,CAASE,KAAK,SAASC,QAAS,SAACC,GAAD,OAzBjB,SAACA,GACpBA,EAAEC,iBACFT,GAAU,GAuBiCU,CAAaF,KAApD,WAIF,kBAAC,IAAD,CAAWH,UAAU,uBACnB,kBAAC,IAAD,CAAaC,KAAK,SAASC,QAAS,SAACC,GAAD,OAzBpB,SAACA,GACrBA,EAAEC,iBACFT,GAAU,GAuBqCW,CAAcH,KAAzD,YAIF,kBAAC,IAAD,CAAWL,KAAK,MACd,kBAAC,IAAD,CAAUE,UAAU,aAEtB,kBAAC,IAAD,CAAWF,KAAK,MACd,kBAAC,IAAD,CAAWC,QAAQ,cAAnB,UAEF,kBAAC,IAAD,CAAWD,KAAK,MACd,kBAAC,IAAD,CAAUE,UAAU,aAGtB,kBAAC,IAAD,CAAWF,KAAK,MACd,uBAAGS,KAAK,0BAA0BP,UAAU,mBAC1C,kBAAC,IAAD,sBAGJ,kBAAC,IAAD,CAAWF,KAAK,KAAKE,UAAU,qBAC7B,uBAAGO,KAAK,YAAYP,UAAU,mBAC5B,kBAAC,IAAD,wBAEF,kBAAC,IAAD,CAAWO,KAAK,iBAAhB,kBAEF,kBAAC,IAAD,CAAWT,KAAK,MACd,kBAAC,IAAD,CAAUE,UAAU,aAEtB,kBAAC,IAAD,CAAWF,KAAK,MACd,kBAAC,IAAD,CAAWC,QAAQ,cAAnB,UAEF,kBAAC,IAAD,CAAWD,KAAK,MACd,kBAAC,IAAD,CAAUE,UAAU,aAEtB,kBAAC,IAAD,CAAWF,KAAK,MACd,kBAAC,IAAD,CAAUA,KAAK,WAEjB,kBAAC,IAAD,CAAWA,KAAK,MACd,kBAAC,IAAD,CAAOA,KAAK,SAASU,KAAK,UAAUC,KAAK,SAE3C,kBAAC,IAAD,CAAWX,KAAK,MACd,kBAAC,IAAD,CAAUE,UAAU,aAEtB,kBAAC,IAAD,CAAWF,KAAK,MAGd,kBAAC,IAAD,CAAWC,QAAQ,cAAnB,mBAAiDH,EAAjD,UAEF,kBAAC,IAAD,CAAWE,KAAK,MACd,kBAAC,IAAD,CACEY,cAAY,aACZC,gBAAiB,GACjBC,aAAc,EACdhB,WAAYA,EACZiB,aAAc,SAACV,GAzErBN,EAyE4CM,EAzExBW,OAAOC,YCrBhBC,UANQ,kBACrB,kBAAC,IAAD,KACE,kBAAC,EAAD","file":"component---src-pages-collection-tsx-42f44134c156e175f918.js","sourcesContent":["import React from 'react';\nimport {\n  PGrid,\n  PLinkPure,\n  PDivider,\n  PLink,\n  PHeadline,\n  PGridItem,\n  PButtonPure,\n  PSpinner,\n  PIcon,\n  PPagination,\n  PButton,\n} from '@porsche-design-system/components-react';\nimport { useState } from 'react';\n\nconst ComponentCollection = (): JSX.Element => {\n  const [submit, setSubmit] = useState(false);\n  const [activePage, setActivePage] = useState(1);\n\n  const handleSubmit = (e: React.MouseEvent<HTMLPButtonElement>): void => {\n    e.preventDefault();\n    setSubmit(true);\n  };\n\n  const handleDismiss = (e: React.MouseEvent<HTMLPButtonPureElement>): void => {\n    e.preventDefault();\n    setSubmit(false);\n  };\n\n  const handleActivePage = (event: CustomEvent): void => {\n    setActivePage(event.detail.page);\n  };\n\n  return (\n    <PGrid>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Buttons</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        {/*To illustrate the mock procedure during the tests the buttons insert/dismiss a headline*/}\n        {submit ? <PHeadline variant=\"headline-4\">Hello</PHeadline> : ''}\n        <PButton type=\"submit\" onClick={(e) => handleSubmit(e)}>\n          Submit\n        </PButton>\n      </PGridItem>\n      <PGridItem className=\"contentWrapperSmall\">\n        <PButtonPure type=\"submit\" onClick={(e) => handleDismiss(e)}>\n          Dismiss\n        </PButtonPure>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Links</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      {/*Example of all Link variation which are provided by the Porsche Design System*/}\n      <PGridItem size=\"12\">\n        <a href=\"https://www.porsche.com\" className=\"removeLinkStyle\">\n          <PLink>porsche.com</PLink>\n        </a>\n      </PGridItem>\n      <PGridItem size=\"12\" className=\"contentWrapperBig\">\n        <a href=\"#hashTest\" className=\"removeLinkStyle\">\n          <PLinkPure>Test PLinkPure</PLinkPure>\n        </a>\n        <PLinkPure href=\"#propHashTest\">Test propHash</PLinkPure>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PHeadline variant=\"headline-4\">Icons</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PSpinner size=\"small\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PIcon size=\"medium\" name=\"highway\" role=\"img\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PDivider className=\"divider\" />\n      </PGridItem>\n      <PGridItem size=\"12\">\n        {/* Simple usage of PPagination. By linking state to activePage, we can listen to the pageChange event of\n                the component*/}\n        <PHeadline variant=\"headline-4\">You are on Page {activePage} Page</PHeadline>\n      </PGridItem>\n      <PGridItem size=\"12\">\n        <PPagination\n          data-testid=\"pagination\"\n          totalItemsCount={11}\n          itemsPerPage={3}\n          activePage={activePage}\n          onPageChange={(e) => handleActivePage(e)}\n        />\n      </PGridItem>\n    </PGrid>\n  );\n};\n\nexport default ComponentCollection;\n","import React from 'react';\nimport Layout from '../components/layout';\nimport ComponentCollection from '../components/componentCollection';\n\nconst CollectionPage = (): JSX.Element => (\n  <Layout>\n    <ComponentCollection />\n  </Layout>\n);\n\nexport default CollectionPage;\n"],"sourceRoot":""}