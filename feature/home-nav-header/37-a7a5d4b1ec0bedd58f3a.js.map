{"version":3,"sources":["webpack:///./node_modules/@porsche-design-system/components-js/dist/esm-es5/p-text-field-wrapper.entry.js"],"names":["TextFieldWrapper","hostRef","this","label","description","state","message","hideLabel","showPassword","searchButtonType","prototype","componentWillLoad","setInput","setAriaAttributes","setState","updatePasswordToggleable","initInputTypeSearch","bindStateListener","addSlottedStyles","componentDidUpdate","render","_this","containerClasses","labelClasses","labelTextClasses","disabled","descriptionTextClasses","fakeInputClasses","readonly","buttonClasses","messageClasses","isLabelVisible","tag","color","onClick","labelClick","name","isDescriptionVisible","size","isPasswordToggleable","type","togglePassword","isInputTypeSearch","event","onSubmitHandler","isMessageVisible","role","Object","defineProperty","get","host","querySelector","enumerable","configurable","includes","isMessageDefined","input","setAttribute","removeAttribute","readOnly","focus","style","cssText","tagName","toLowerCase"],"mappings":"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","file":"37-a7a5d4b1ec0bedd58f3a.js","sourcesContent":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-381d535c.js';\nimport { c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, t as transitionListener, h as handleButtonEvent, b as insertSlottedStyles } from './index-0a27866a.js';\nvar textFieldWrapperCss = \":host{display:block}::slotted(input){position:absolute !important;top:0 !important;left:0 !important;width:100% !important;height:100% !important;display:block !important;padding:0.75rem !important;margin:0 !important;outline:transparent none !important;outline-offset:1px !important;-webkit-appearance:none !important;-moz-appearance:none !important;appearance:none !important;-webkit-box-sizing:border-box !important;box-sizing:border-box !important;border-width:0 !important;border-top-color:transparent !important;background-color:transparent !important;opacity:1 !important;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif !important;font-weight:400 !important;font-size:1rem !important;line-height:1.5 !important;text-indent:0 !important;color:#000 !important;-webkit-transition:outline-color 0.24s ease, color 0.24s ease, border-top-color 1ms linear !important;transition:outline-color 0.24s ease, color 0.24s ease, border-top-color 1ms linear !important}::slotted(input:focus){outline:#00d5b9 solid 2px !important}::slotted(input:-moz-read-only:focus){outline:none !important}::slotted(input:read-only:focus){outline:none !important}::slotted(input:not(:disabled):-moz-read-only){border-top-color:rgba(255, 255, 255, 0.01) !important;color:#626669 !important}::slotted(input:not(:disabled):read-only){border-top-color:rgba(255, 255, 255, 0.01) !important;color:#626669 !important}::slotted(input:disabled){border-top-color:rgba(255, 255, 255, 0.02) !important;color:#96989a !important;-webkit-text-fill-color:#96989a !important;cursor:not-allowed !important}.p-text-field-wrapper__container{position:relative;display:block}.p-text-field-wrapper__label{display:block}.p-text-field-wrapper__label-text,.p-text-field-wrapper__description-text{display:block;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-text-field-wrapper__label-text--disabled,.p-text-field-wrapper__description-text--disabled{color:#96989a}.p-text-field-wrapper__label-text--visible,.p-text-field-wrapper__description-text--visible{position:static;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden,.p-text-field-wrapper__description-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}@media (min-width: 480px){.p-text-field-wrapper__label-text--visible-xs,.p-text-field-wrapper__description-text--visible-xs{position:static;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xs,.p-text-field-wrapper__description-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 760px){.p-text-field-wrapper__label-text--visible-s,.p-text-field-wrapper__description-text--visible-s{position:static;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-s,.p-text-field-wrapper__description-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1000px){.p-text-field-wrapper__label-text--visible-m,.p-text-field-wrapper__description-text--visible-m{position:static;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-m,.p-text-field-wrapper__description-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1300px){.p-text-field-wrapper__label-text--visible-l,.p-text-field-wrapper__description-text--visible-l{position:static;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-l,.p-text-field-wrapper__description-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1760px){.p-text-field-wrapper__label-text--visible-xl,.p-text-field-wrapper__description-text--visible-xl{position:static;width:-webkit-fit-content;width:-moz-fit-content;width:fit-content;height:auto;margin:0;padding:0 0 0.25rem 0;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-text-field-wrapper__label-text--hidden-xl,.p-text-field-wrapper__description-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-text-field-wrapper__description-text{color:#626669}.p-text-field-wrapper__description-text--disabled{color:#96989a}.p-text-field-wrapper__label-text~.p-text-field-wrapper__description-text{margin-top:-0.25rem;padding-bottom:0.5rem}.p-text-field-wrapper__fake-input{position:relative;width:100%;height:3rem;display:block;background-color:#fff;-webkit-box-shadow:inset 0 0 0 1px #626669;box-shadow:inset 0 0 0 1px #626669;-webkit-transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease, -webkit-box-shadow 0.24s ease}.p-text-field-wrapper__fake-input:hover:not(.p-text-field-wrapper__fake-input--disabled):not(.p-text-field-wrapper__fake-input--readonly):not(.p-text-field-wrapper__fake-input--success):not(.p-text-field-wrapper__fake-input--error),.p-text-field-wrapper__label-text:hover~.p-text-field-wrapper__fake-input:not(.p-text-field-wrapper__fake-input--disabled):not(.p-text-field-wrapper__fake-input--readonly):not(.p-text-field-wrapper__fake-input--success):not(.p-text-field-wrapper__fake-input--error){-webkit-box-shadow:inset 0 0 0 1px #000;box-shadow:inset 0 0 0 1px #000}.p-text-field-wrapper__fake-input--disabled{-webkit-box-shadow:inset 0 0 0 1px #96989a;box-shadow:inset 0 0 0 1px #96989a;background-color:#fff}.p-text-field-wrapper__fake-input--readonly{-webkit-box-shadow:inset 0 0 0 1px #ebebeb;box-shadow:inset 0 0 0 1px #ebebeb;background-color:#ebebeb}.p-text-field-wrapper__fake-input--success{-webkit-box-shadow:inset 0 0 0 2px #018a16;box-shadow:inset 0 0 0 2px #018a16}.p-text-field-wrapper__fake-input--success:hover,.p-text-field-wrapper__label-text:hover~.p-text-field-wrapper__fake-input--success{-webkit-box-shadow:inset 0 0 0 2px #014d0c;box-shadow:inset 0 0 0 2px #014d0c}.p-text-field-wrapper__fake-input--error{-webkit-box-shadow:inset 0 0 0 2px #e00000;box-shadow:inset 0 0 0 2px #e00000}.p-text-field-wrapper__fake-input--error:hover,.p-text-field-wrapper__label-text:hover~.p-text-field-wrapper__fake-input--error{-webkit-box-shadow:inset 0 0 0 2px #a30000;box-shadow:inset 0 0 0 2px #a30000}.p-text-field-wrapper__message{margin-top:0.25rem;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-text-field-wrapper__message--success{color:#018a16}.p-text-field-wrapper__message--error{color:#e00000}.p-text-field-wrapper__button{position:absolute;bottom:0;right:0;margin:0;width:3rem;height:3rem;padding:0.75rem;-webkit-box-sizing:border-box;box-sizing:border-box;outline:transparent none;-webkit-appearance:none;-moz-appearance:none;appearance:none;border:none;text-decoration:none;background:transparent;cursor:pointer;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-text-field-wrapper__button::-moz-focus-inner{border:0}.p-text-field-wrapper__button:hover{color:#d5001c}.p-text-field-wrapper__button:active{color:#d5001c}.p-text-field-wrapper__button:focus{color:#00d5b9}.p-text-field-wrapper__button:disabled{color:#96989a;cursor:not-allowed !important}\";\n\nvar TextFieldWrapper =\n/** @class */\nfunction () {\n  function TextFieldWrapper(hostRef) {\n    registerInstance(this, hostRef);\n    /** The label text. */\n\n    this.label = '';\n    /** The description text. */\n\n    this.description = '';\n    /** The validation state. */\n\n    this.state = 'none';\n    /** The message styled depending on validation state. */\n\n    this.message = '';\n    /** Show or hide label and description text. For better accessibility it is recommended to show the label. */\n\n    this.hideLabel = false;\n    this.showPassword = false;\n    this.searchButtonType = 'submit';\n  }\n\n  TextFieldWrapper.prototype.componentWillLoad = function () {\n    this.setInput();\n    this.setAriaAttributes();\n    this.setState();\n    this.updatePasswordToggleable();\n    this.initInputTypeSearch();\n    this.bindStateListener();\n    this.addSlottedStyles();\n  };\n\n  TextFieldWrapper.prototype.componentDidUpdate = function () {\n    this.setAriaAttributes();\n  };\n\n  TextFieldWrapper.prototype.render = function () {\n    var _this = this;\n\n    var containerClasses = cx(prefix('text-field-wrapper__container'));\n    var labelClasses = cx(prefix('text-field-wrapper__label'));\n    var labelTextClasses = cx(prefix('text-field-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('text-field-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']), this.disabled && prefix('text-field-wrapper__label-text--disabled'));\n    var descriptionTextClasses = cx(prefix('text-field-wrapper__description-text'), mapBreakpointPropToPrefixedClasses('text-field-wrapper__description-text-', this.hideLabel, ['hidden', 'visible']), this.disabled && prefix('text-field-wrapper__description-text--disabled'));\n    var fakeInputClasses = cx(prefix('text-field-wrapper__fake-input'), this.state !== 'none' && prefix(\"text-field-wrapper__fake-input--\" + this.state), this.disabled && prefix('text-field-wrapper__fake-input--disabled'), this.readonly && prefix('text-field-wrapper__fake-input--readonly'));\n    var buttonClasses = cx(prefix('text-field-wrapper__button'));\n    var messageClasses = cx(prefix('text-field-wrapper__message'), this.state !== 'none' && prefix(\"text-field-wrapper__message--\" + this.state));\n    return h(Host, null, h(\"div\", {\n      \"class\": containerClasses\n    }, h(\"label\", {\n      \"class\": labelClasses\n    }, this.isLabelVisible && h(\"p-text\", {\n      \"class\": labelTextClasses,\n      tag: 'span',\n      color: 'inherit',\n      onClick: function onClick() {\n        return _this.labelClick();\n      }\n    }, this.label ? this.label : h(\"span\", null, h(\"slot\", {\n      name: 'label'\n    }))), this.isDescriptionVisible && h(\"p-text\", {\n      \"class\": descriptionTextClasses,\n      tag: 'span',\n      color: 'inherit',\n      size: 'x-small',\n      onClick: function onClick() {\n        return _this.labelClick();\n      }\n    }, this.description ? this.description : h(\"span\", null, h(\"slot\", {\n      name: 'description'\n    }))), h(\"span\", {\n      \"class\": fakeInputClasses\n    }, h(\"slot\", null))), this.isPasswordToggleable && h(\"button\", {\n      type: 'button',\n      \"class\": buttonClasses,\n      onClick: function onClick() {\n        return _this.togglePassword();\n      },\n      disabled: this.disabled\n    }, h(\"p-icon\", {\n      name: this.showPassword ? 'view-off' : 'view',\n      color: 'inherit'\n    })), this.isInputTypeSearch && h(\"button\", {\n      onClick: function onClick(event) {\n        return _this.onSubmitHandler(event);\n      },\n      type: 'submit',\n      \"class\": buttonClasses,\n      disabled: this.disabled || this.readonly\n    }, h(\"p-icon\", {\n      name: 'search',\n      color: 'inherit'\n    }))), this.isMessageVisible && h(\"p-text\", {\n      \"class\": messageClasses,\n      color: 'inherit',\n      role: this.state === 'error' && 'alert'\n    }, this.message ? this.message : h(\"span\", null, h(\"slot\", {\n      name: 'message'\n    }))));\n  };\n\n  Object.defineProperty(TextFieldWrapper.prototype, \"isLabelVisible\", {\n    get: function get() {\n      return !!this.label || !!this.host.querySelector('[slot=\"label\"]');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextFieldWrapper.prototype, \"isDescriptionVisible\", {\n    get: function get() {\n      return !!this.description || !!this.host.querySelector('[slot=\"description\"]');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextFieldWrapper.prototype, \"isMessageDefined\", {\n    get: function get() {\n      return !!this.message || !!this.host.querySelector('[slot=\"message\"]');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(TextFieldWrapper.prototype, \"isMessageVisible\", {\n    get: function get() {\n      return ['success', 'error'].includes(this.state) && this.isMessageDefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  TextFieldWrapper.prototype.setInput = function () {\n    this.input = this.host.querySelector('input');\n  };\n  /*\n   * This is a workaround to improve accessibility because the input and the label/description/message text are placed in different DOM.\n   * Referencing ID's from outside the component is impossible because the web component’s DOM is separate.\n   * We have to wait for full support of the Accessibility Object Model (AOM) to provide the relationship between shadow DOM and slots\n   */\n\n\n  TextFieldWrapper.prototype.setAriaAttributes = function () {\n    if (this.label && this.message) {\n      this.input.setAttribute('aria-label', this.label + \". \" + this.message);\n    } else if (this.label && this.description) {\n      this.input.setAttribute('aria-label', this.label + \". \" + this.description);\n    } else if (this.label) {\n      this.input.setAttribute('aria-label', this.label);\n    }\n\n    if (this.state === 'error') {\n      this.input.setAttribute('aria-invalid', 'true');\n    } else {\n      this.input.removeAttribute('aria-invalid');\n    }\n  };\n\n  TextFieldWrapper.prototype.setState = function () {\n    this.disabled = this.input.disabled;\n    this.readonly = this.input.readOnly;\n  };\n\n  TextFieldWrapper.prototype.labelClick = function () {\n    this.input.focus();\n  };\n\n  TextFieldWrapper.prototype.bindStateListener = function () {\n    var _this = this;\n\n    transitionListener(this.input, 'border-top-color', function () {\n      _this.setState();\n    });\n  };\n\n  TextFieldWrapper.prototype.updatePasswordToggleable = function () {\n    this.isPasswordToggleable = this.input.type === 'password';\n\n    if (this.isPasswordToggleable) {\n      this.input.style.cssText = 'padding-right: 3rem !important';\n    }\n  };\n\n  TextFieldWrapper.prototype.togglePassword = function () {\n    this.input.type = this.input.type === 'password' ? 'text' : 'password';\n    this.showPassword = !this.showPassword;\n    this.labelClick();\n  };\n\n  TextFieldWrapper.prototype.initInputTypeSearch = function () {\n    this.isInputTypeSearch = this.input.type === 'search';\n\n    if (this.isInputTypeSearch) {\n      this.input.style.cssText = 'padding-right: 3rem !important';\n    }\n  };\n\n  TextFieldWrapper.prototype.onSubmitHandler = function (event) {\n    var _this = this;\n\n    if (this.isInputTypeSearch) {\n      handleButtonEvent(event, this.host, function () {\n        return _this.searchButtonType;\n      }, function () {\n        return _this.disabled;\n      });\n    }\n  };\n\n  TextFieldWrapper.prototype.addSlottedStyles = function () {\n    var tagName = this.host.tagName.toLowerCase();\n    var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\\n\\n    \" + tagName + \" input::-webkit-outer-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n\\n    \" + tagName + \" input::-webkit-inner-spin-button {\\n      appearance: none !important;\\n      -webkit-appearance: none !important;\\n    }\\n\\n    \" + tagName + \" input[type=password]::-webkit-contacts-auto-fill-button,\\n    \" + tagName + \" input[type=password]::-webkit-credentials-auto-fill-button {\\n      margin-right: 2rem;\\n    }\\n\\n    \" + tagName + \" input[type=search]::-webkit-search-cancel-button {\\n      margin-right: 2rem;\\n    }\\n    \";\n    insertSlottedStyles(this.host, style);\n  };\n\n  Object.defineProperty(TextFieldWrapper.prototype, \"host\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TextFieldWrapper;\n}();\n\nTextFieldWrapper.style = textFieldWrapperCss;\nexport { TextFieldWrapper as p_text_field_wrapper };"],"sourceRoot":""}