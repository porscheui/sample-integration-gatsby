{"version":3,"sources":["webpack:///./node_modules/@porsche-design-system/components-js/dist/esm-es5/p-checkbox-wrapper.entry.js"],"names":["CheckboxWrapper","hostRef","this","label","state","message","hideLabel","prototype","componentWillLoad","setInput","setAriaAttributes","setState","bindStateListener","addSlottedStyles","componentDidUpdate","render","_this","labelClasses","fakeCheckboxClasses","checked","indeterminate","disabled","iconClasses","labelTextClasses","messageClasses","isLabelVisible","tag","color","onClick","e","labelClick","name","theme","size","isMessageVisible","role","Object","defineProperty","get","host","querySelector","enumerable","configurable","includes","isMessageDefined","input","setAttribute","removeAttribute","event","shadowRoot","target","closest","click","tagName","toLowerCase","style"],"mappings":"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","file":"21-6a83db4e9477f99dbcd3.js","sourcesContent":["import \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.object.define-property\";\nimport { r as registerInstance, h, H as Host, g as getElement } from './index-381d535c.js';\nimport { c as cx, p as prefix, m as mapBreakpointPropToPrefixedClasses, t as transitionListener, b as insertSlottedStyles } from './index-0a27866a.js';\nvar checkboxWrapperCss = \":host{display:block}::slotted(input){position:absolute !important;top:0 !important;left:0 !important;width:100% !important;height:100% !important;display:block !important;margin:0 !important;padding:0 !important;-webkit-appearance:none !important;-moz-appearance:none !important;appearance:none !important;border:0 !important;border-top-color:rgba(255, 255, 255, 0) !important;background-color:transparent !important;opacity:1 !important;outline:transparent solid 2px !important;outline-offset:1px !important;cursor:pointer !important;-webkit-transition:outline-color 0.24s ease, border-top-color 1ms linear !important;transition:outline-color 0.24s ease, border-top-color 1ms linear !important}::slotted(input::-ms-check){display:none !important}::slotted(input:focus){outline-color:#00d5b9 !important}::slotted(input:checked){border-top-color:rgba(255, 255, 255, 0.01) !important}::slotted(input:disabled){cursor:not-allowed !important;border-top-color:rgba(255, 255, 255, 0.02) !important}::slotted(input:indeterminate){border-top-color:rgba(255, 255, 255, 0.03) !important}::slotted(input:disabled:checked){border-top-color:rgba(255, 255, 255, 0.04) !important}::slotted(input:disabled:indeterminate){border-top-color:rgba(255, 255, 255, 0.05) !important}::slotted(input:checked:indeterminate){border-top-color:rgba(255, 255, 255, 0.06) !important}::slotted(input:disabled:checked:indeterminate){border-top-color:rgba(255, 255, 255, 0.07) !important}.p-checkbox-wrapper__label{position:relative;display:-ms-flexbox;display:flex}.p-checkbox-wrapper__label-text{-ms-flex-order:1;order:1;display:inline-block;cursor:pointer;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-checkbox-wrapper__label-text--disabled{color:#96989a;cursor:default}.p-checkbox-wrapper__label-text--visible{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}@media (min-width: 480px){.p-checkbox-wrapper__label-text--visible-xs{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-xs{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 760px){.p-checkbox-wrapper__label-text--visible-s{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-s{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1000px){.p-checkbox-wrapper__label-text--visible-m{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-m{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1300px){.p-checkbox-wrapper__label-text--visible-l{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-l{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}@media (min-width: 1760px){.p-checkbox-wrapper__label-text--visible-xl{position:static;width:auto;height:auto;margin:0;padding:0 0 0 0.5rem;white-space:normal;overflow:visible;clip:auto;-webkit-clip-path:none;clip-path:none}.p-checkbox-wrapper__label-text--hidden-xl{position:absolute;width:1px;height:1px;margin:-1px;padding:0;white-space:nowrap;overflow:hidden;clip:rect(1px, 1px, 1px, 1px);-webkit-clip-path:inset(50%);clip-path:inset(50%)}}.p-checkbox-wrapper__fake-checkbox{position:relative;width:1.5rem;height:1.5rem;display:block;-ms-flex-negative:0;flex-shrink:0;background-color:#fff;-webkit-box-shadow:inset 0 0 0 1px #626669;box-shadow:inset 0 0 0 1px #626669;-webkit-transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:background-color 0.24s ease, -webkit-box-shadow 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease;transition:box-shadow 0.24s ease, background-color 0.24s ease, -webkit-box-shadow 0.24s ease}.p-checkbox-wrapper__fake-checkbox:hover:not(.p-checkbox-wrapper__fake-checkbox--disabled):not(.p-checkbox-wrapper__fake-checkbox--success):not(.p-checkbox-wrapper__fake-checkbox--error),.p-checkbox-wrapper__label-text:hover~.p-checkbox-wrapper__fake-checkbox:not(.p-checkbox-wrapper__fake-checkbox--disabled):not(.p-checkbox-wrapper__fake-checkbox--success):not(.p-checkbox-wrapper__fake-checkbox--error){-webkit-box-shadow:inset 0 0 0 1px #000;box-shadow:inset 0 0 0 1px #000}.p-checkbox-wrapper__fake-checkbox--checked{-webkit-box-shadow:inset 0 0 0 1px #323639;box-shadow:inset 0 0 0 1px #323639;background-color:#323639}.p-checkbox-wrapper__fake-checkbox--checked.p-checkbox-wrapper__fake-checkbox--disabled{background-color:#96989a}.p-checkbox-wrapper__fake-checkbox--checked.p-checkbox-wrapper__fake-checkbox--error{background-color:#e00000}.p-checkbox-wrapper__fake-checkbox--checked.p-checkbox-wrapper__fake-checkbox--success{background-color:#018a16}.p-checkbox-wrapper__fake-checkbox--disabled{-webkit-box-shadow:inset 0 0 0 1px #96989a;box-shadow:inset 0 0 0 1px #96989a}.p-checkbox-wrapper__fake-checkbox--error{-webkit-box-shadow:inset 0 0 0 2px #e00000;box-shadow:inset 0 0 0 2px #e00000}.p-checkbox-wrapper__fake-checkbox--error:hover,.p-checkbox-wrapper__label-text:hover~.p-checkbox-wrapper__fake-checkbox--error{-webkit-box-shadow:inset 0 0 0 2px #a30000;box-shadow:inset 0 0 0 2px #a30000}.p-checkbox-wrapper__fake-checkbox--success{-webkit-box-shadow:inset 0 0 0 2px #018a16;box-shadow:inset 0 0 0 2px #018a16}.p-checkbox-wrapper__fake-checkbox--success:hover,.p-checkbox-wrapper__label-text:hover~.p-checkbox-wrapper__fake-checkbox--success{-webkit-box-shadow:inset 0 0 0 2px #014d0c;box-shadow:inset 0 0 0 2px #014d0c}.p-checkbox-wrapper__icon{position:absolute;top:0;left:0;width:100%;height:100%;opacity:0;-webkit-transition:opacity 0.24s ease;transition:opacity 0.24s ease}.p-checkbox-wrapper__icon--checked{opacity:1}.p-checkbox-wrapper__message{margin-top:0.25rem;color:#000;-webkit-transition:color 0.24s ease;transition:color 0.24s ease}.p-checkbox-wrapper__message--success{color:#018a16}.p-checkbox-wrapper__message--error{color:#e00000}\";\n\nvar CheckboxWrapper =\n/** @class */\nfunction () {\n  function CheckboxWrapper(hostRef) {\n    registerInstance(this, hostRef);\n    /** The label text. */\n\n    this.label = '';\n    /** The validation state. */\n\n    this.state = 'none';\n    /** The message styled depending on validation state. */\n\n    this.message = '';\n    /** Show or hide label. For better accessibility it's recommended to show the label. */\n\n    this.hideLabel = false;\n  }\n\n  CheckboxWrapper.prototype.componentWillLoad = function () {\n    this.setInput();\n    this.setAriaAttributes();\n    this.setState();\n    this.bindStateListener();\n    this.addSlottedStyles();\n  };\n\n  CheckboxWrapper.prototype.componentDidUpdate = function () {\n    this.setAriaAttributes();\n  };\n\n  CheckboxWrapper.prototype.render = function () {\n    var _this = this;\n\n    var labelClasses = cx(prefix('checkbox-wrapper__label'));\n    var fakeCheckboxClasses = cx(prefix('checkbox-wrapper__fake-checkbox'), (this.checked || this.indeterminate) && prefix('checkbox-wrapper__fake-checkbox--checked'), this.disabled && prefix('checkbox-wrapper__fake-checkbox--disabled'), this.state !== 'none' && prefix(\"checkbox-wrapper__fake-checkbox--\" + this.state));\n    var iconClasses = cx(prefix('checkbox-wrapper__icon'), (this.checked || this.indeterminate) && prefix('checkbox-wrapper__icon--checked'));\n    var labelTextClasses = cx(prefix('checkbox-wrapper__label-text'), mapBreakpointPropToPrefixedClasses('checkbox-wrapper__label-text-', this.hideLabel, ['hidden', 'visible']), this.disabled && prefix('checkbox-wrapper__label-text--disabled'));\n    var messageClasses = cx(prefix('checkbox-wrapper__message'), this.state !== 'none' && prefix(\"checkbox-wrapper__message--\" + this.state));\n    return h(Host, null, h(\"label\", {\n      \"class\": labelClasses\n    }, this.isLabelVisible && h(\"p-text\", {\n      \"class\": labelTextClasses,\n      tag: 'span',\n      color: 'inherit',\n      onClick: function onClick(e) {\n        return _this.labelClick(e);\n      }\n    }, this.label ? this.label : h(\"span\", null, h(\"slot\", {\n      name: 'label'\n    }))), h(\"span\", {\n      \"class\": fakeCheckboxClasses\n    }, h(\"p-icon\", {\n      \"class\": iconClasses,\n      name: this.indeterminate ? 'minus' : 'check',\n      theme: 'dark',\n      size: 'inherit'\n    }), h(\"slot\", null))), this.isMessageVisible && h(\"p-text\", {\n      \"class\": messageClasses,\n      color: 'inherit',\n      role: this.state === 'error' && 'alert'\n    }, this.message ? this.message : h(\"span\", null, h(\"slot\", {\n      name: 'message'\n    }))));\n  };\n\n  Object.defineProperty(CheckboxWrapper.prototype, \"isLabelVisible\", {\n    get: function get() {\n      return !!this.label || !!this.host.querySelector('[slot=\"label\"]');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CheckboxWrapper.prototype, \"isMessageDefined\", {\n    get: function get() {\n      return !!this.message || !!this.host.querySelector('[slot=\"message\"]');\n    },\n    enumerable: true,\n    configurable: true\n  });\n  Object.defineProperty(CheckboxWrapper.prototype, \"isMessageVisible\", {\n    get: function get() {\n      return ['success', 'error'].includes(this.state) && this.isMessageDefined;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  CheckboxWrapper.prototype.setInput = function () {\n    this.input = this.host.querySelector('input[type=\"checkbox\"]');\n  };\n  /*\n   * This is a workaround to improve accessibility because the input and the label/description/message text are placed in different DOM.\n   * Referencing ID's from outside the component is impossible because the web component’s DOM is separate.\n   * We have to wait for full support of the Accessibility Object Model (AOM) to provide the relationship between shadow DOM and slots\n   */\n\n\n  CheckboxWrapper.prototype.setAriaAttributes = function () {\n    if (this.label && this.message) {\n      this.input.setAttribute('aria-label', this.label + \". \" + this.message);\n    } else if (this.label) {\n      this.input.setAttribute('aria-label', this.label);\n    }\n\n    if (this.state === 'error') {\n      this.input.setAttribute('aria-invalid', 'true');\n    } else {\n      this.input.removeAttribute('aria-invalid');\n    }\n  };\n\n  CheckboxWrapper.prototype.labelClick = function (event) {\n    /**\n     * we only want to simulate the checkbox click by label click\n     * for real shadow dom, else the native behaviour works out\n     * of the box.\n     * also we don't want to click to the input, if a link is\n     * clicked.\n     */\n    if (this.host.shadowRoot && this.host.shadowRoot.host && event.target.closest('a') === null) {\n      this.input.click();\n    }\n  };\n\n  CheckboxWrapper.prototype.setState = function () {\n    this.checked = this.input.checked;\n    this.disabled = this.input.disabled;\n    this.indeterminate = this.input.indeterminate;\n  };\n\n  CheckboxWrapper.prototype.bindStateListener = function () {\n    var _this = this;\n\n    transitionListener(this.input, 'border-top-color', function () {\n      _this.setState();\n    });\n  };\n\n  CheckboxWrapper.prototype.addSlottedStyles = function () {\n    var tagName = this.host.tagName.toLowerCase();\n    var style = tagName + \" a {\\n      outline: none transparent;\\n      color: inherit;\\n      text-decoration: underline;\\n      -webkit-transition: outline-color .24s ease, color .24s ease;\\n      transition: outline-color .24s ease, color .24s ease;\\n    }\\n\\n    \" + tagName + \" a:hover {\\n      color: #d5001c;\\n    }\\n\\n    \" + tagName + \" a:focus {\\n      outline: 2px solid #00d5b9;\\n      outline-offset: 1px;\\n    }\";\n    insertSlottedStyles(this.host, style);\n  };\n\n  Object.defineProperty(CheckboxWrapper.prototype, \"host\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return CheckboxWrapper;\n}();\n\nCheckboxWrapper.style = checkboxWrapperCss;\nexport { CheckboxWrapper as p_checkbox_wrapper };"],"sourceRoot":""}