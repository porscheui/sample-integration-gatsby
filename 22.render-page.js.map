{"version":3,"sources":["webpack://lib/./node_modules/@porsche-design-system/components-js/dist/esm-es5/p-text-list.entry.js"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAA2F;AAChC;AAC3D,yBAAyB,cAAc,iCAAiC,aAAa,eAAe,gBAAgB,kEAAkE,gBAAgB,cAAc,UAAU,SAAS,0BAA0B,WAAW,yBAAyB,WAAW;AAChT;AACA;AACA,QAAQ,4DAAgB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,4DAAE,CAAC,4DAAM,eAAe,4DAAM,iCAAiC,4DAAM,yDAAyD,4DAAM;AAClK,gBAAgB,4DAAC,CAAC,oDAAI,GAAG,4BAA4B,EAAE,4DAAC,WAAW,uCAAuC,EAAE,4DAAC;AAC7G;AACA;AACA;AACA,uCAAuC,4DAAM;AAC7C,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,0BAA0B,QAAQ,4DAAU,OAAO,EAAE;AACrD;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD;AACmC","file":"22.render-page.js","sourcesContent":["import { r as registerInstance, h, H as Host, g as getElement } from './index-381d535c.js';\nimport { c as cx, p as prefix } from './index-0a27866a.js';\nvar textListCss = \":host{display:block;counter-reset:section !important}.p-text-list{font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:400;display:block;padding:0;margin:0}.p-text-list--theme-light{color:#000}.p-text-list--theme-dark{color:#fff}\";\nvar TextList = /** @class */ (function () {\n    function TextList(hostRef) {\n        registerInstance(this, hostRef);\n        /** The type of the text list. */\n        this.listType = 'unordered';\n        /** The list style type of an ordered list. */\n        this.orderType = 'numbered';\n        /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n        this.theme = 'light';\n    }\n    TextList.prototype.render = function () {\n        var TagType = this.listType === 'unordered' ? 'ul' : 'ol';\n        var textListClasses = cx(prefix('text-list'), prefix(\"text-list--\" + this.listType), prefix(\"text-list--theme-\" + this.theme), this.isNestedList && prefix('text-list--nested'));\n        return (h(Host, { nested: this.isNestedList }, h(TagType, { role: 'list', class: textListClasses }, h(\"slot\", null))));\n    };\n    Object.defineProperty(TextList.prototype, \"isNestedList\", {\n        get: function () {\n            return !!this.host.closest(prefix('text-list-item'));\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(TextList.prototype, \"host\", {\n        get: function () { return getElement(this); },\n        enumerable: true,\n        configurable: true\n    });\n    return TextList;\n}());\nTextList.style = textListCss;\nexport { TextList as p_text_list };\n"],"sourceRoot":""}