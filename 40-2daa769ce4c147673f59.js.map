{"version":3,"sources":["webpack:///./node_modules/@porsche-design-system/components-js/dist/esm-es5/p-text-list.entry.js"],"names":["TextList","hostRef","this","listType","orderType","theme","prototype","render","TagType","textListClasses","isNestedList","nested","role","Object","defineProperty","get","host","closest","enumerable","configurable","style"],"mappings":"4FAAA,yFAKIA,EAEJ,WACE,SAASA,EAASC,GAChB,YAAiBC,KAAMD,GAGvBC,KAAKC,SAAW,YAGhBD,KAAKE,UAAY,WAGjBF,KAAKG,MAAQ,QA4Bf,OAzBAL,EAASM,UAAUC,OAAS,WAC1B,IAAIC,EAA4B,cAAlBN,KAAKC,SAA2B,KAAO,KACjDM,EAAkB,YAAW,YAAO,aAAc,YAAO,cAAgBP,KAAKC,UAAW,YAAO,oBAAsBD,KAAKG,OAAQH,KAAKQ,cAAgB,YAAO,sBACnK,OAAO,YAAE,IAAM,CACbC,OAAQT,KAAKQ,cACZ,YAAEF,EAAS,CACZI,KAAM,OACN,MAASH,GACR,YAAE,OAAQ,SAGfI,OAAOC,eAAed,EAASM,UAAW,eAAgB,CACxDS,IAAK,WACH,QAASb,KAAKc,KAAKC,QAAQ,YAAO,oBAEpCC,YAAY,EACZC,cAAc,IAEhBN,OAAOC,eAAed,EAASM,UAAW,OAAQ,CAChDS,IAAK,WACH,OAAO,YAAWb,OAEpBgB,YAAY,EACZC,cAAc,IAETnB,EAvCT,GA0CAA,EAASoB,MA9CS","file":"40-2daa769ce4c147673f59.js","sourcesContent":["import \"core-js/modules/es6.object.define-property\";\nimport { r as registerInstance, c as prefix, h, H as Host, g as getElement } from './breakpointCustomizable-f03211e4.js';\nimport { c as classnames } from './index-359f03c5.js';\nvar textListCss = \":host{display:block;counter-reset:section !important}.p-text-list{font-size:1rem;line-height:1.5;font-family:\\\"Porsche Next\\\", \\\"Arial Narrow\\\", Arial, sans-serif;font-weight:400;display:block;padding:0;margin:0}.p-text-list--theme-light{color:#000}.p-text-list--theme-dark{color:#fff}\";\n\nvar TextList =\n/** @class */\nfunction () {\n  function TextList(hostRef) {\n    registerInstance(this, hostRef);\n    /** The type of the text list. */\n\n    this.listType = 'unordered';\n    /** The list style type of an ordered list. */\n\n    this.orderType = 'numbered';\n    /** Adapts the text color depending on the theme. Has no effect when \"inherit\" is set as color prop. */\n\n    this.theme = 'light';\n  }\n\n  TextList.prototype.render = function () {\n    var TagType = this.listType === 'unordered' ? 'ul' : 'ol';\n    var textListClasses = classnames(prefix('text-list'), prefix(\"text-list--\" + this.listType), prefix(\"text-list--theme-\" + this.theme), this.isNestedList && prefix('text-list--nested'));\n    return h(Host, {\n      nested: this.isNestedList\n    }, h(TagType, {\n      role: 'list',\n      \"class\": textListClasses\n    }, h(\"slot\", null)));\n  };\n\n  Object.defineProperty(TextList.prototype, \"isNestedList\", {\n    get: function get() {\n      return !!this.host.closest(prefix('text-list-item'));\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TextList.prototype, \"host\", {\n    get: function get() {\n      return getElement(this);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return TextList;\n}();\n\nTextList.style = textListCss;\nexport { TextList as p_text_list };"],"sourceRoot":""}